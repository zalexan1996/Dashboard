@using DashboardAPI.Data;
@using DashboardAPI.Data.ActiveDirectory;

@using DashboardAPI.Controllers.ActiveDirectory;
@using DashboardAPI.Providers;

<DataPointWrapper Title="Locked Out Users">
    @if(Data?.Data.Count > 0)
    {
        <TableElement Table=@Data Autorun=@true/>
    }
    else
    {
        <p>Sorry, no data to present.</p>
    }
</DataPointWrapper>


@code {

    public string InOu { get; set; } = "Fulfillment";

    public Table? Data { get; set; } = new Table();

    protected override async Task OnInitializedAsync()
    {
        // Fetch our user database from the local API
        var users = await UserController.Invoke<ADUser>();

        if (users != null)
        {
            // Show the locked out users in the domain user folder.
            Data = Table.GetTable<ADUser>(

                // Filter the users down to only those locked out and only those in the target OU.
                users.Where(u=>u.IsLockedOut && u.IsInOU(ActiveDirectoryProvider.LockedOutUserSearchBase)).ToArray(),

                // Only show these two columns
                new string[] {"Name", "LockedOutSince"}
            );

            // Re-render this component.
            StateHasChanged();
        }
    }
}